import	-	Directive
numpy	-	String
as	-	Reserved
np	-	String
import	-	Directive
time	-	String
print	-	String
(	-	Operator
"Printed immediately."	-	String
)	-	Operator
time	-	String
.	-	Operator
sleep	-	String
(	-	Operator
2.4	-	Number
)	-	Operator
print	-	String
(	-	Operator
"Printed after 2.4 seconds."	-	String
)	-	Operator
kilometers	-	String
=	-	Operator
float	-	String
(	-	Operator
input	-	String
(	-	Operator
"Enter value in kilometers: "	-	String
)	-	Operator
)	-	Operator
conv_fac	-	String
=	-	Operator
0.621371	-	Number
miles	-	String
=	-	Operator
kilometers	-	String
*	-	Operator
conv_fac	-	String
print	-	String
(	-	Operator
'%0.2f kilometers is equal to %0.2f miles'	-	String
%	-	Operator
(	-	Operator
kilometers	-	String
,	-	Operator
miles	-	String
)	-	Operator
)	-	Operator
num1	-	String
=	-	Operator
10	-	Number
num2	-	String
=	-	Operator
3	-	Number
num3	-	String
=	-	Operator
4	-	Number
if	-	Reserved
(	-	Operator
num1	-	String
>=	-	Operator
num2	-	String
)	-	Operator
and	-	Reserved
(	-	Operator
num1	-	String
>=	-	Operator
num3	-	String
)	-	Operator
:	-	Operator
largest	-	String
=	-	Operator
num1	-	String
elif	-	Reserved
(	-	Operator
num2	-	String
>=	-	Operator
num1	-	String
)	-	Operator
and	-	Reserved
(	-	Operator
num2	-	String
>=	-	Operator
num3	-	String
)	-	Operator
:	-	Operator
largest	-	String
=	-	Operator
num2	-	String
else	-	Reserved
:	-	Operator
largest	-	String
=	-	Operator
num3	-	String
print	-	String
(	-	Operator
"The largest number is"	-	String
,	-	Operator
largest	-	String
)	-	Operator
my_list	-	String
=	-	Operator
[	-	Operator
12	-	Number
,	-	Operator
65	-	Number
,	-	Operator
54	-	Number
,	-	Operator
39	-	Number
,	-	Operator
102	-	Number
,	-	Operator
339	-	Number
,	-	Operator
221	-	Number
,	-	Operator
]	-	Operator
result	-	String
=	-	Operator
list	-	String
(	-	Operator
filter	-	String
(	-	Operator
lambda	-	String
x	-	String
:	-	Operator
(	-	Operator
x	-	String
%	-	Operator
13	-	Number
==	-	Operator
0	-	Number
)	-	Operator
,	-	Operator
my_list	-	String
)	-	Operator
)	-	Operator
print	-	String
(	-	Operator
"Numbers divisible by 13 are"	-	String
,	-	Operator
result	-	String
)	-	Operator
def	-	Reserved
recur_fibo	-	String
(	-	Operator
n	-	String
)	-	Operator
:	-	Operator
if	-	Reserved
n	-	String
<=	-	Operator
1	-	Number
:	-	Operator
return	-	Reserved
n	-	String
else	-	Reserved
:	-	Operator
return	-	Reserved
(	-	Operator
recur_fibo	-	String
(	-	Operator
n	-	String
-	-	Operator
1	-	Number
)	-	Operator
+	-	Operator
recur_fibo	-	String
(	-	Operator
n	-	String
-	-	Operator
2	-	Number
)	-	Operator
)	-	Operator
nterms	-	String
=	-	Operator
10	-	Number
if	-	Reserved
nterms	-	String
<=	-	Operator
0	-	Number
:	-	Operator
print	-	String
(	-	Operator
"Plese enter a positive integer"	-	String
)	-	Operator
else	-	Reserved
:	-	Operator
print	-	String
(	-	Operator
"Fibonacci sequence:"	-	String
)	-	Operator
for	-	Reserved
i	-	String
in	-	Reserved
range	-	String
(	-	Operator
nterms	-	String
)	-	Operator
:	-	Operator
print	-	String
(	-	Operator
recur_fibo	-	String
(	-	Operator
i	-	String
)	-	Operator
)	-	Operator